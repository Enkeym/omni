import { parse as qsParse } from "querystring"
import { bitrixUrl } from "../config.js"
import {
  createUser,
  editUser,
  getUser,
  postCase
} from "../services/omniService.js"
import { extractTarifText } from "../utils/extractTarifText.js"
import { createLogger } from "../utils/logger.js"
import { sendWa } from "../utils/sendWa.js"

// –û–±—â–∏–π —à—Ç–∞–º–ø –¥–ª—è –ª–æ–≥–æ–≤
const logger = createLogger("REGISTER")

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.
 * –î–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞, –ø–∞—Ä–∞–º–µ—Ç—Ä query –∏–ª–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ URL.
 *
 * @param {object} req - –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ Express.
 * @param {object} res - –û–±—ä–µ–∫—Ç –æ—Ç–≤–µ—Ç–∞ Express.
 */
export const register = async (req, res) => {
  try {
    logger.info("–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ query
    let dataStr = req.body || req.query.data

    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äì –∏–∑–≤–ª–µ–∫–∞–µ–º –∏—Ö –∏–∑ URL (–ø–æ—Å–ª–µ "/register")
    if (!dataStr) {
      // –î–µ–∫–æ–¥–∏—Ä—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL –∏ —É–¥–∞–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "/register"
      dataStr = decodeURIComponent(req.originalUrl).replace(/^\/register/, "")
      if (dataStr.startsWith("|")) {
        dataStr = dataStr.slice(1)
      }
      dataStr = dataStr.trim()
    }

    if (!dataStr) {
      logger.error("–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—É—Å—Ç–æ–µ")
      return res.status(400).send("–ü—É—Å—Ç–æ–µ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞")
    }

    let fields = []
    // –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–º–≤–æ–ª—ã "=" –∏ "&", –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—à–ª–∏ –≤ –≤–∏–¥–µ query‚Äëstring
    if (dataStr.includes("=") && dataStr.includes("&")) {
      const params = qsParse(dataStr)
      logger.debug("Parsed query parameters:", params)
      // –ò–∑–≤–ª–µ–∫–∞–µ–º tid –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ document_id[2]
      const tid = params["document_id[2]"]
      if (!tid) {
        logger.error("tid –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö")
        return res.status(400).send("tid –Ω–µ –Ω–∞–π–¥–µ–Ω")
      }
      // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –ø–æ–ª–µ–π: tid ‚Äì –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–º–∏ (0 –∏–ª–∏ –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
      fields = [
        tid, // tid
        "", // surname
        "", // name
        "", // email
        "", // company
        "", // contname
        "", // phone
        "", // inn
        "", // contmail
        "", // tg
        "", // cat
        "", // role
        "", // tarif
        "", // comment
        "" // gs1
      ]
    } else {
      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ "pipe-separated"
      fields = dataStr.split("|")
    }

    logger.debug("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø–æ–ª—è:", fields)

    if (fields.length !== 15) {
      logger.error("–û—à–∏–±–∫–∞: –æ–∂–∏–¥–∞–ª–æ—Å—å 15 —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –ø–æ–ª—É—á–µ–Ω–æ", fields.length)
      return res.status(400).send("–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    }

    // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
    const [
      tid, // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞—è–≤–∫–∏
      surname, // –§–∞–º–∏–ª–∏—è
      name, // –ò–º—è
      email, // Email
      company, // –ö–æ–º–ø–∞–Ω–∏—è
      contname, // –ò–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
      phone, // –¢–µ–ª–µ—Ñ–æ–Ω
      inn, // –ò–ù–ù
      contmail, // Email –∫–æ–Ω—Ç–∞–∫—Ç–∞
      tg, // Telegram (–±–µ–∑ @)
      cat, // –ö–∞—Ç–µ–≥–æ—Ä–∏—è
      role, // –†–æ–ª—å
      tarif, // –°—Ç—Ä–æ–∫–∞ —Ç–∞—Ä–∏—Ñ–∞
      comment, // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
      gs1 // –§–ª–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ GS1 ("–î–∞" –∏–ª–∏ –∏–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
    ] = fields
    logger.info("–ü–æ–ª—è –∑–∞–ø—Ä–æ—Å–∞ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–æ–±—Ä–∞–Ω—ã")

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∑–∞—è–≤–∫—É –≤ Bitrix24
    const dealUrl = `${bitrixUrl}/crm/deal/details/${tid}/`
    logger.debug("–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É:", dealUrl)

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ —Ç–∞—Ä–∏—Ñ–∞
    const tarifText = extractTarifText(tarif)
    logger.debug("–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ:", tarifText)

    // –í—ã–±–æ—Ä —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–µ–º—ã –∑–∞—è–≤–∫–∏
    const emo = role === "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å" ? "üìë" : "üìÑ"
    const gs1Emoji = gs1 === "–î–∞" ? "üåê" : ""

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ WhatsApp
    logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ WhatsApp –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", phone)
    const waStatus = await sendWa(phone)
    logger.info("–°—Ç–∞—Ç—É—Å WhatsApp —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", waStatus)

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤ OmniDesk
    const caseData = {
      case: {
        user_email: email,
        cc_emails: ["vshumovsky@getmark.ru"],
        status: "open",
        user_full_name: `${surname} ${name}`,
        subject: `${emo}${
          comment ? "‚ùó" : ""
        }${gs1Emoji} –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è. ${company}`,
        content: `–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ${company}
–ö–æ–Ω—Ç–∞–∫—Ç: ${phone} ${contname}
–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${cat} ${role}
–¢–∞—Ä–∏—Ñ: ${tarifText}
–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ${waStatus}
–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É: ${dealUrl}
${gs1Emoji ? "üåê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ì–°1!" : ""}
${comment ? "‚ùó –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: " : ""}${comment}
`
      }
    }

    logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏ –≤ OmniDesk")
    const { status } = await postCase(caseData)
    logger.info("–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞. –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:", status)

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let userData = {
      user: {
        user_full_name: contname,
        company_name: company,
        company_position: inn,
        user_phone: phone,
        user_email: contmail,
        user_telegram: tg.replace("@", ""),
        user_note: tarifText
      }
    }

    logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É:", phone)
    const { data: userResponse } = await getUser({ user_phone: phone })
    logger.debug("–û—Ç–≤–µ—Ç OmniDesk –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", userResponse)

    if (userResponse && Object.keys(userResponse).length > 0) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω ‚Äì –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
      const { user = {} } = userResponse["0"] || {}
      const userId = user.user_id
      logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω. ID:", userId)

      // –£–¥–∞–ª—è–µ–º –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–ª–µ–¥—É–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å
      delete userData.user.user_email
      delete userData.user.user_phone
      delete userData.user.user_telegram

      logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
      const { data: editData } = await editUser(userId, userData)
      logger.info("–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω:", editData)
    } else {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äì —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
      logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è")
      const { data: createData } = await createUser(userData)
      logger.info("–ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω:", createData)
    }
    res.sendStatus(200)
  } catch ({ message }) {
    logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", message)
    res.status(500).send("–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
  }
}
