import axios from "axios"

import { wazzupChannelId, wazzupToken, wazzupUrl } from "../config.js"

import { text1, text2 } from "./textMessages.js"

const headers = {
  "Content-Type": "application/json",
  Authorization: `Bearer ${wazzupToken}`
}

const createMessagePayload = (phone, text) => ({
  channelId: wazzupChannelId,
  chatId: phone,
  chatType: "whatsapp",
  text
})

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ WhatsApp.
 * @param {string} phone - –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
 * @returns {Promise<string>} –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
 */
export const sendWa = async (phone) => {
  const sanitizedPhone = phone.replace(/\D/g, "") // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
  console.log(`üì≤ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ WhatsApp –Ω–∞ –Ω–æ–º–µ—Ä: ${sanitizedPhone}`)

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
  const messages = [
    createMessagePayload(sanitizedPhone, text1),
    createMessagePayload(sanitizedPhone, text2)
  ]

  try {
    console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ Wazzup...")

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    const responses = await Promise.all(
      messages.map((msg) => axios.post(wazzupUrl, msg, { headers }))
    )

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
    const allSuccessful = responses.every(
      (res) => res.status === 201 || res.status === 200
    )

    if (allSuccessful) {
      console.log("‚úÖ –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ WhatsApp.")
      return "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚úîÔ∏è"
    } else {
      console.warn("‚ö†Ô∏è –ù–µ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ.")
      return "–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚ùå"
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π WhatsApp:", error.message)

    if (error.response) {
      console.error(
        "üìå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:",
        JSON.stringify(error.response.data, null, 2)
      )
      console.error("üìå HTTP —Å—Ç–∞—Ç—É—Å:", error.response.status)
    } else {
      console.error("üìå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –í–æ–∑–º–æ–∂–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é.")
    }

    return "–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚ùå"
  }
}
