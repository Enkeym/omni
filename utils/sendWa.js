//utils/sendWa.js
import axios from "axios"

import { wazzupChannelId, wazzupToken, wazzupUrl } from "../config.js"

import { text1, text2 } from "./textMessages.js"

const headers = {
  "Content-Type": "application/json",
  Authorization: `Bearer ${wazzupToken}`
}

const createMessagePayload = (phone, text) => ({
  channelId: wazzupChannelId,
  chatId: phone,
  chatType: "whatsapp",
  text
})

// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ WatsApp
export const sendWa = async (phone) => {
  const sanitizedPhone = phone.replace(/\D/g, "")
  console.log(`üì≤ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ WhatsApp –Ω–∞ –Ω–æ–º–µ—Ä: ${sanitizedPhone}`)

  const message1 = createMessagePayload(sanitizedPhone, text1)
  const message2 = createMessagePayload(sanitizedPhone, text2)

  try {
    console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ Wazzup...")

    const response1 = await axios.post(wazzupUrl, message1, { headers })
    if (response1.status !== 201 && response1.status !== 200) {
      console.warn(
        "–ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:",
        response1.status,
        response1.statusText
      )
      return "–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚ùå"
    }

    const response2 = await axios.post(wazzupUrl, message2, { headers })
    if (response2.status !== 201 && response2.status !== 200) {
      console.warn(
        "–í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:",
        response2.status,
        response2.statusText
      )
      return "–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚ùå"
    }

    console.log("‚úÖ –û–±–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ WhatsApp.")
    return "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚úîÔ∏è"
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π WhatsApp:", error.message)

    if (error.response) {
      console.error(
        "üìå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:",
        JSON.stringify(error.response.data, null, 2)
      )
      console.error("üìå HTTP —Å—Ç–∞—Ç—É—Å:", error.response.status)
    } else {
      console.error("üìå –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –í–æ–∑–º–æ–∂–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é.")
    }

    return "–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚ùå"
  }
}
